{
    "project": {
        "name": "lisk docs",
        "description": "Lisk Documentation",
        "version": "0.0.1",
        "url": "to-be-done",
        "logo": "https://lisk.io/i/mediakit/logo_1.png"
    },
    "files": {
        "helpers/validator/field.js": {
            "name": "helpers/validator/field.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "helpers/validator/validator.js": {
            "name": "helpers/validator/validator.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "helpers/checkIpInList.js": {
            "name": "helpers/checkIpInList.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "helpers/git.js": {
            "name": "helpers/git.js",
            "modules": {},
            "classes": {
                "git.js": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "helpers/httpApi.js": {
            "name": "helpers/httpApi.js",
            "modules": {},
            "classes": {
                "httpApi": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "helpers/router.js": {
            "name": "helpers/router.js",
            "modules": {},
            "classes": {
                "Router": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "helpers/slots.js": {
            "name": "helpers/slots.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "modules/blocks.js": {
            "name": "modules/blocks.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "modules/peers.js": {
            "name": "modules/peers.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "test/common/globalBefore.js": {
            "name": "test/common/globalBefore.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "test/common/initModule.js": {
            "name": "test/common/initModule.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "app.js": {
            "name": "app.js",
            "modules": {
                "lisk": 1
            },
            "classes": {
                "Main": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "lisk": {
            "name": "lisk",
            "submodules": {
                "helper": 1
            },
            "elements": {},
            "classes": {
                "git.js": 1,
                "httpApi": 1,
                "Router": 1,
                "Main": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "app.js",
            "line": 3,
            "description": "Main entry point.\nLoads the lisk modules, the lisk api and run the express server as Domain master.\nCLI options available",
            "itemtype": "main"
        },
        "helper": {
            "name": "helper",
            "submodules": {},
            "elements": {},
            "classes": {
                "httpApi": 1,
                "Router": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "lisk",
            "namespace": "",
            "description": "Express.js router wrapper",
            "file": "helpers/router.js",
            "line": 6
        }
    },
    "classes": {
        "git.js": {
            "name": "git.js",
            "shortname": "git.js",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "lisk",
            "file": "helpers/git.js",
            "line": 2,
            "description": "Helper module for parsing git commit information"
        },
        "httpApi": {
            "name": "httpApi",
            "shortname": "httpApi",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "lisk",
            "file": "helpers/httpApi.js",
            "line": 3,
            "submodule": "helper"
        },
        "Router": {
            "name": "Router",
            "shortname": "Router",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "lisk",
            "namespace": "",
            "file": "helpers/router.js",
            "line": 6,
            "description": "Express.js router wrapper",
            "return": {
                "description": "",
                "type": "Router"
            },
            "is_constructor": 1,
            "submodule": "helper"
        },
        "Main": {
            "name": "Main",
            "shortname": "Main",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "lisk",
            "namespace": "",
            "file": "app.js",
            "line": 3,
            "description": "Main entry point.\nLoads the lisk modules, the lisk api and run the express server as Domain master.\nCLI options available",
            "mainName": "lisk",
            "tag": "main",
            "itemtype": "main",
            "_main": true
        }
    },
    "elements": {},
    "classitems": [
        {
            "file": "helpers/validator/field.js",
            "line": 5,
            "params": [
                {
                    "name": "validator",
                    "description": "Validator instance",
                    "type": "Validator"
                },
                {
                    "name": "path",
                    "description": "Validation field path",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "Validated value",
                    "type": "*"
                },
                {
                    "name": "rules",
                    "description": "Set of rules",
                    "type": "Object"
                },
                {
                    "name": "thisArg",
                    "description": "Value used as this reference within rule callback calls.",
                    "type": "*"
                }
            ],
            "is_constructor": 1,
            "class": "git.js"
        },
        {
            "file": "helpers/validator/field.js",
            "line": 27,
            "description": "Create child field.",
            "params": [
                {
                    "name": "path",
                    "description": "Validation field path",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "Validated value",
                    "type": "*"
                },
                {
                    "name": "rules",
                    "description": "Set of rules",
                    "type": "Object"
                },
                {
                    "name": "thisArg",
                    "description": "Value used as this reference within rule callback calls.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "",
                "type": "Validator.Field"
            },
            "class": "git.js"
        },
        {
            "file": "helpers/validator/field.js",
            "line": 41,
            "description": "Validate field value and trigger callback on result",
            "params": [
                {
                    "name": "callback",
                    "description": ""
                }
            ],
            "class": "git.js"
        },
        {
            "file": "helpers/validator/field.js",
            "line": 121,
            "description": "End validation. Drop validation stack.",
            "params": [
                {
                    "name": "err",
                    "description": "Report and error if passed. Optional",
                    "type": "Error"
                }
            ],
            "class": "git.js"
        },
        {
            "file": "helpers/validator/field.js",
            "line": 140,
            "description": "Create validation async. Callback get done function to emit validation end.",
            "params": [
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function(done:function)"
                }
            ],
            "class": "git.js"
        },
        {
            "file": "helpers/validator/field.js",
            "line": 169,
            "description": "Report an invalid validation result",
            "params": [
                {
                    "name": "}",
                    "description": "report Validation report object"
                }
            ],
            "class": "git.js"
        },
        {
            "file": "helpers/validator/validator.js",
            "line": 13,
            "description": "Create validator. Options could have properties `forceAsync`, `skipMissed` and `rules`.",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "is_constructor": 1,
            "class": "git.js"
        },
        {
            "file": "helpers/validator/validator.js",
            "line": 38,
            "description": "Make validation async even if no async rules are used.",
            "type": "{boolean}",
            "class": "git.js"
        },
        {
            "file": "helpers/validator/validator.js",
            "line": 44,
            "description": "Don't throw error if rule is missed",
            "type": "{boolean}",
            "class": "git.js"
        },
        {
            "file": "helpers/validator/validator.js",
            "line": 50,
            "description": "If rule value is function run it to get value",
            "type": "{boolean}",
            "class": "git.js"
        },
        {
            "file": "helpers/validator/validator.js",
            "line": 56,
            "description": "Issue reporter. Convert issues.",
            "type": "{Reporter}",
            "class": "git.js"
        },
        {
            "file": "helpers/validator/validator.js",
            "line": 62,
            "description": "Check whether rule exists.",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "git.js"
        },
        {
            "file": "helpers/validator/validator.js",
            "line": 71,
            "description": "Get rule descriptor.",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "git.js"
        },
        {
            "file": "helpers/validator/validator.js",
            "line": 83,
            "description": "Validate values with specified rules set",
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "*"
                },
                {
                    "name": "rules",
                    "description": "Set of rules",
                    "type": "Object"
                },
                {
                    "name": "callback",
                    "description": "Result callback",
                    "type": "Function (err:Error,report:Array,output:*)="
                }
            ],
            "class": "git.js"
        },
        {
            "file": "helpers/validator/validator.js",
            "line": 143,
            "description": "Validator field constructor",
            "type": "{Field}",
            "class": "git.js"
        },
        {
            "file": "helpers/validator/validator.js",
            "line": 149,
            "description": "Create field instance",
            "params": [
                {
                    "name": "path",
                    "description": "Field path",
                    "type": "String|string[]"
                },
                {
                    "name": "value",
                    "description": "Validated value",
                    "type": "*"
                },
                {
                    "name": "rules",
                    "description": "Rule set",
                    "type": "Object"
                },
                {
                    "name": "thisArg",
                    "description": "This reference for Validation methods. Optional",
                    "type": "*="
                }
            ],
            "return": {
                "description": "",
                "type": "Validator.Field"
            },
            "class": "git.js"
        },
        {
            "file": "helpers/validator/validator.js",
            "line": 161,
            "description": "Set of validator rule descriptors",
            "type": "{{}}",
            "class": "git.js"
        },
        {
            "file": "helpers/validator/validator.js",
            "line": 176,
            "description": "Add validation rule descriptor to validator rule set.",
            "params": [
                {
                    "name": "name",
                    "description": "Validator name",
                    "type": "String"
                },
                {
                    "name": "}",
                    "description": "descriptor Validator descriptor object",
                    "type": "Validate:function,filter:function"
                }
            ],
            "class": "git.js"
        },
        {
            "file": "helpers/validator/validator.js",
            "line": 197,
            "description": "Add rule alias",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "origin",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "git.js"
        },
        {
            "file": "helpers/validator/validator.js",
            "line": 210,
            "description": "Add extra property to Field. It could be",
            "params": [
                {
                    "name": "name",
                    "description": ""
                },
                {
                    "name": "value",
                    "description": ""
                }
            ],
            "class": "git.js"
        },
        {
            "file": "helpers/validator/validator.js",
            "line": 219,
            "description": "Validator instance options for fast initialization in method validate.",
            "type": "{{forceAsync: boolean, skipMissed: boolean}}",
            "class": "git.js"
        },
        {
            "file": "helpers/validator/validator.js",
            "line": 230,
            "description": "Validate with fast initialization. Use `options` property for constructor instance;",
            "params": [
                {
                    "name": "value",
                    "description": "Validated value",
                    "type": "*"
                },
                {
                    "name": "rules",
                    "description": "Set of rules",
                    "type": "Object"
                },
                {
                    "name": "customRules",
                    "description": "Customized rule set. Optional",
                    "type": "Object"
                },
                {
                    "name": "callback",
                    "description": "Result callback",
                    "type": "Function (err:Error, report:object[], result:*)"
                }
            ],
            "class": "git.js"
        },
        {
            "file": "helpers/checkIpInList.js",
            "line": 6,
            "description": "Checks if ip address is in list (e.g. whitelist, blacklist).",
            "params": [
                {
                    "name": "list:",
                    "description": "an array of ip addresses or ip subnets",
                    "type": "Array"
                },
                {
                    "name": "addr:",
                    "description": "the ip address to check if in array",
                    "type": "String"
                },
                {
                    "name": "returnListIsEmpty",
                    "description": "returnListIsEmpty: the return value, if list is empty",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "true"
                }
            ],
            "return": {
                "description": "true if ip is in the list, false otherwise",
                "type": "Boolean"
            },
            "class": "git.js"
        },
        {
            "file": "helpers/git.js",
            "line": 10,
            "description": "Return hash of last git commit if available",
            "itemtype": "method",
            "name": "getLastCommit",
            "access": "public",
            "tagname": "",
            "return": {
                "description": "Hash of last git commit",
                "type": "String"
            },
            "throws": {
                "description": "Throws error if cannot get last git commit",
                "type": "Error"
            },
            "class": "git.js"
        },
        {
            "file": "helpers/httpApi.js",
            "line": 14,
            "description": "Add CORS header to all requests",
            "itemtype": "method",
            "name": "cors",
            "params": [
                {
                    "name": "req",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "res",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "next",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "httpApi",
            "module": "lisk",
            "submodule": "helper"
        },
        {
            "file": "helpers/httpApi.js",
            "line": 27,
            "description": "Log all api errors",
            "itemtype": "method",
            "name": "errorLogger",
            "params": [
                {
                    "name": "logger",
                    "description": "",
                    "type": "Logger"
                },
                {
                    "name": "err",
                    "description": "",
                    "type": "Error"
                },
                {
                    "name": "req",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "res",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "next",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "httpApi",
            "module": "lisk",
            "submodule": "helper"
        },
        {
            "file": "helpers/httpApi.js",
            "line": 42,
            "description": "Log api client connections",
            "itemtype": "method",
            "name": "logClientConnections",
            "params": [
                {
                    "name": "logger",
                    "description": "",
                    "type": "Logger"
                },
                {
                    "name": "req",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "res",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "next",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "httpApi",
            "module": "lisk",
            "submodule": "helper"
        },
        {
            "file": "helpers/httpApi.js",
            "line": 57,
            "description": "Resend error msg when blockchain is not loaded",
            "itemtype": "method",
            "name": "blockchainReady",
            "params": [
                {
                    "name": "isLoaded",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "req",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "res",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "next",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "httpApi",
            "module": "lisk",
            "submodule": "helper"
        },
        {
            "file": "helpers/httpApi.js",
            "line": 70,
            "description": "Resend error if API endpoint doesn't exists",
            "params": [
                {
                    "name": "req",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "res",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "next",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "httpApi",
            "module": "lisk",
            "submodule": "helper"
        },
        {
            "file": "helpers/httpApi.js",
            "line": 80,
            "description": "Use req.sanitize for particular endpoint",
            "params": [
                {
                    "name": "property",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "schema",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "cb",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "sanitize middleware",
                "type": "Function"
            },
            "class": "httpApi",
            "module": "lisk",
            "submodule": "helper"
        },
        {
            "file": "helpers/httpApi.js",
            "line": 98,
            "description": "Attach header to response",
            "params": [
                {
                    "name": "headerKey",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "headerValue",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "req",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "res",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "next",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "httpApi",
            "module": "lisk",
            "submodule": "helper"
        },
        {
            "file": "helpers/httpApi.js",
            "line": 111,
            "description": "Apply rules of public / internal API described in config.json",
            "params": [
                {
                    "name": "config",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "req",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "res",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "next",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "httpApi",
            "module": "lisk",
            "submodule": "helper"
        },
        {
            "file": "helpers/httpApi.js",
            "line": 132,
            "description": "Pass getter for headers and assign then to response",
            "params": [
                {
                    "name": "getHeaders",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "req",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "res",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "next",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "httpApi",
            "module": "lisk",
            "submodule": "helper"
        },
        {
            "file": "helpers/httpApi.js",
            "line": 145,
            "description": "Add 'success' field to every response and attach error message if needed",
            "params": [
                {
                    "name": "res",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "err",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "response",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "httpApi",
            "module": "lisk",
            "submodule": "helper"
        },
        {
            "file": "helpers/httpApi.js",
            "line": 159,
            "description": "Register router in express app using default middleware",
            "params": [
                {
                    "name": "route",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "app",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "router",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "isLoaded",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "httpApi",
            "module": "lisk",
            "submodule": "helper"
        },
        {
            "file": "helpers/slots.js",
            "line": 5,
            "description": "Get time from Lisk epoch.",
            "params": [
                {
                    "name": "time",
                    "description": "Time in unix seconds",
                    "type": "Number|undefined"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Main",
            "module": "lisk"
        },
        {
            "file": "modules/blocks.js",
            "line": 1385,
            "description": "Creates logger for tracking applied transactions of block",
            "params": [
                {
                    "name": "transactionsCount",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "logsFrequency",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "msg",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "BlockProgressLogger"
            },
            "class": "Main",
            "module": "lisk"
        },
        {
            "file": "modules/blocks.js",
            "line": 1399,
            "description": "Resets applied transactions",
            "class": "Main",
            "module": "lisk"
        },
        {
            "file": "modules/blocks.js",
            "line": 1406,
            "description": "Increments applied transactions and logs the progress\n- For the first and last transaction\n- With given frequency",
            "class": "Main",
            "module": "lisk"
        },
        {
            "file": "modules/blocks.js",
            "line": 1421,
            "description": "Logs the progress",
            "class": "Main",
            "module": "lisk"
        },
        {
            "file": "modules/peers.js",
            "line": 555,
            "description": "Returns information about version",
            "access": "public",
            "tagname": "",
            "async": 1,
            "itemtype": "method",
            "name": "version",
            "params": [
                {
                    "name": "req",
                    "description": "HTTP request object",
                    "type": "Object"
                },
                {
                    "name": "cb",
                    "description": "Callback function",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "cb.obj.version Lisk version from config file",
                "type": "String"
            },
            "class": "Main",
            "module": "lisk"
        },
        {
            "file": "test/common/globalBefore.js",
            "line": 5,
            "params": [
                {
                    "name": "table",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "logger",
                    "description": "",
                    "type": "Logger"
                },
                {
                    "name": "db",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "cb",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "Main",
            "module": "lisk"
        },
        {
            "file": "test/common/globalBefore.js",
            "line": 20,
            "params": [
                {
                    "name": "cb",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "retries",
                    "description": "retries",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "10"
                },
                {
                    "name": "timeout",
                    "description": "timeout",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "200"
                }
            ],
            "class": "Main",
            "module": "lisk"
        },
        {
            "file": "test/common/initModule.js",
            "line": 36,
            "description": "Initializes Logic class with params",
            "params": [
                {
                    "name": "Logic",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "scope",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "cb",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "Main",
            "module": "lisk"
        },
        {
            "file": "test/common/initModule.js",
            "line": 47,
            "description": "Initializes Module class with params",
            "params": [
                {
                    "name": "Module",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "scope",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "cb",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "Main",
            "module": "lisk"
        },
        {
            "file": "test/common/initModule.js",
            "line": 58,
            "description": "Initializes multiple Modules",
            "params": [
                {
                    "name": ">}",
                    "description": "modules",
                    "type": "Array<name: Module"
                },
                {
                    "name": ">}",
                    "description": "logic",
                    "type": "Array<name: Logic"
                },
                {
                    "name": "scope",
                    "description": "",
                    "type": "Object>"
                },
                {
                    "name": "cb",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "Main",
            "module": "lisk"
        },
        {
            "file": "test/common/initModule.js",
            "line": 94,
            "description": "Initializes all created Modules in directory",
            "params": [
                {
                    "name": "cb",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "scope",
                    "description": "scope",
                    "type": "Object",
                    "optional": true,
                    "optdefault": "{}"
                }
            ],
            "class": "Main",
            "module": "lisk"
        },
        {
            "file": "test/common/initModule.js",
            "line": 124,
            "description": "Initializes Module class with basic conf",
            "params": [
                {
                    "name": "Module",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "cb",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "scope",
                    "description": "",
                    "type": "Object="
                }
            ],
            "class": "Main",
            "module": "lisk"
        },
        {
            "file": "test/common/initModule.js",
            "line": 135,
            "description": "Initializes Logic class with basic conf",
            "params": [
                {
                    "name": "Logic",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "cb",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "scope",
                    "description": "",
                    "type": "Object="
                }
            ],
            "class": "Main",
            "module": "lisk"
        },
        {
            "file": "test/common/initModule.js",
            "line": 146,
            "description": "Accepts Class to invoke (Logic or Module) and fills the scope with basic conf",
            "params": [
                {
                    "name": "Klass",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "moduleConstructor",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "cb",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "scope",
                    "description": "",
                    "type": "Object="
                }
            ],
            "class": "Main",
            "module": "lisk"
        },
        {
            "file": "test/common/initModule.js",
            "line": 164,
            "description": "Starts and returns db connection",
            "params": [
                {
                    "name": "cb",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "Main",
            "module": "lisk"
        },
        {
            "file": "app.js",
            "line": 33,
            "description": "Hash of last git commit",
            "itemtype": "property",
            "name": "lastCommit",
            "type": "String",
            "class": "Main",
            "module": "lisk"
        },
        {
            "file": "app.js",
            "line": 56,
            "description": "The default list of configuration options. Can be updated by CLI.",
            "itemtype": "property",
            "name": "appConfig",
            "type": "Object",
            "default": "'config.json'",
            "class": "Main",
            "module": "lisk"
        },
        {
            "file": "app.js",
            "line": 103,
            "description": "The config object to handle lisk modules and lisk api. \n\nAlso contains db configuration from config.json",
            "itemtype": "property",
            "name": "config",
            "type": "Object",
            "default": "'./modules/*.js, ./api/*.js'",
            "class": "Main",
            "module": "lisk"
        },
        {
            "file": "app.js",
            "line": 145,
            "description": "Logger holder so we can log with custom functionality.\n\nThe Object is initialized here and pass to others as parameter.",
            "itemtype": "property",
            "name": "logger",
            "type": "Object",
            "class": "Main",
            "module": "lisk"
        },
        {
            "file": "app.js",
            "line": 162,
            "description": "Creates the express server and loads all the Modules and logic.",
            "itemtype": "property",
            "name": "d",
            "type": "Object",
            "class": "Main",
            "module": "lisk"
        },
        {
            "file": "app.js",
            "line": 177,
            "description": "Loads `payloadHash` and generate dapp password if it is empty and required.\nThen updates config.json with new random  password.",
            "itemtype": "method",
            "name": "config",
            "params": [
                {
                    "name": "cb",
                    "description": "Callback function",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "cb Callback function with the mutated `appConfig`",
                "type": "Function"
            },
            "class": "Main",
            "module": "lisk"
        },
        {
            "file": "app.js",
            "line": 221,
            "description": "Returns hash of last git commit",
            "itemtype": "method",
            "name": "lastCommit",
            "params": [
                {
                    "name": "cb",
                    "description": "Callback function",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "cb.lastCommit Hash of last git commit",
                "type": "String"
            },
            "class": "Main",
            "module": "lisk"
        },
        {
            "file": "app.js",
            "line": 248,
            "description": "Creates app, http & https servers & sockets with express.",
            "itemtype": "method",
            "name": "network",
            "requires": [
                "config"
            ],
            "params": [
                {
                    "name": "scope",
                    "description": "the results from current execution, \nat leats will contain the required elementss",
                    "type": "Object"
                },
                {
                    "name": "cb",
                    "description": "Callback function",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "cb Callback function from params with created Object: `{\n\t\t\t\texpress,\n\t\t\t\tapp,\n\t\t\t\tserver,\n\t\t\t\tio,\n\t\t\t\thttps,\n\t\t\t\thttps_io\n\t\t\t}`",
                "type": "Function"
            },
            "class": "Main",
            "module": "lisk"
        },
        {
            "file": "app.js",
            "line": 339,
            "description": "Adds configuration to `network.app`",
            "itemtype": "method",
            "name": "connect",
            "requires": [
                "config",
                "public",
                "genesisblock",
                "logger",
                "build",
                "network"
            ],
            "params": [
                {
                    "name": "scope",
                    "description": "the results from current execution, \nat leats will contain the required elements",
                    "type": "Object"
                },
                {
                    "name": "cb",
                    "description": "Callback function",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "cb Callback function",
                "type": "Function"
            },
            "class": "Main",
            "module": "lisk"
        },
        {
            "file": "app.js",
            "line": 438,
            "description": "Loads transaction, block, account and peers from logic folder",
            "itemtype": "method",
            "name": "logic",
            "requires": [
                "db",
                "bus",
                "schema",
                "genesisblock"
            ],
            "params": [
                {
                    "name": "scope",
                    "description": "the results from current execution, \nat leats will contain the required elements",
                    "type": "Object"
                },
                {
                    "name": "cb",
                    "description": "Callback function",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "cb Callback function",
                "type": "Function"
            },
            "class": "Main",
            "module": "lisk"
        },
        {
            "file": "app.js",
            "line": 490,
            "description": "Loads modules from `modules` folder using `config.modules`",
            "itemtype": "method",
            "name": "modules",
            "requires": [
                "network",
                "connect",
                "config",
                "logger",
                "bus",
                "sequence",
                "dbSequence",
                "balancesSequence",
                "db",
                "logic"
            ],
            "params": [
                {
                    "name": "scope",
                    "description": "the results from current execution, \nat leats will contain the required elements",
                    "type": "Object"
                },
                {
                    "name": "cb",
                    "description": "Callback function",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "cb Callback function with resulted load",
                "type": "Function"
            },
            "class": "Main",
            "module": "lisk"
        },
        {
            "file": "app.js",
            "line": 526,
            "description": "Loads api from `api` folder using `config.api`",
            "itemtype": "method",
            "name": "api",
            "requires": [
                "modules",
                "logger",
                "network"
            ],
            "params": [
                {
                    "name": "scope",
                    "description": "the results from current execution, \nat leats will contain the required elements",
                    "type": "Object"
                },
                {
                    "name": "cb",
                    "description": "Callback function",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "cb Callback function",
                "type": "Function"
            },
            "class": "Main",
            "module": "lisk"
        },
        {
            "file": "app.js",
            "line": 560,
            "description": "Binds and listens for connections on the specified host and port for \n`scope.network.server`",
            "itemtype": "method",
            "name": "listen",
            "requires": [
                "ready"
            ],
            "params": [
                {
                    "name": "scope",
                    "description": "the results from current execution, \nat leats will contain the required elements",
                    "type": "Object"
                },
                {
                    "name": "cb",
                    "description": "Callback function",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "cb Callback function with `scope.network`",
                "type": "Function"
            },
            "class": "Main",
            "module": "lisk"
        }
    ],
    "warnings": [
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " helpers/validator/field.js:27"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " helpers/validator/validator.js:62"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " helpers/validator/validator.js:71"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " helpers/validator/validator.js:149"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " helpers/slots.js:5"
        },
        {
            "message": "Missing item type",
            "line": " helpers/validator/field.js:5"
        },
        {
            "message": "Missing item type\nCreate child field.",
            "line": " helpers/validator/field.js:27"
        },
        {
            "message": "Missing item type\nValidate field value and trigger callback on result",
            "line": " helpers/validator/field.js:41"
        },
        {
            "message": "Missing item type\nEnd validation. Drop validation stack.",
            "line": " helpers/validator/field.js:121"
        },
        {
            "message": "Missing item type\nCreate validation async. Callback get done function to emit validation end.",
            "line": " helpers/validator/field.js:140"
        },
        {
            "message": "Missing item type\nReport an invalid validation result",
            "line": " helpers/validator/field.js:169"
        },
        {
            "message": "Missing item type\nCreate validator. Options could have properties `forceAsync`, `skipMissed` and `rules`.",
            "line": " helpers/validator/validator.js:13"
        },
        {
            "message": "Missing item type\nMake validation async even if no async rules are used.",
            "line": " helpers/validator/validator.js:38"
        },
        {
            "message": "Missing item type\nDon't throw error if rule is missed",
            "line": " helpers/validator/validator.js:44"
        },
        {
            "message": "Missing item type\nIf rule value is function run it to get value",
            "line": " helpers/validator/validator.js:50"
        },
        {
            "message": "Missing item type\nIssue reporter. Convert issues.",
            "line": " helpers/validator/validator.js:56"
        },
        {
            "message": "Missing item type\nCheck whether rule exists.",
            "line": " helpers/validator/validator.js:62"
        },
        {
            "message": "Missing item type\nGet rule descriptor.",
            "line": " helpers/validator/validator.js:71"
        },
        {
            "message": "Missing item type\nValidate values with specified rules set",
            "line": " helpers/validator/validator.js:83"
        },
        {
            "message": "Missing item type\nValidator field constructor",
            "line": " helpers/validator/validator.js:143"
        },
        {
            "message": "Missing item type\nCreate field instance",
            "line": " helpers/validator/validator.js:149"
        },
        {
            "message": "Missing item type\nSet of validator rule descriptors",
            "line": " helpers/validator/validator.js:161"
        },
        {
            "message": "Missing item type\nAdd validation rule descriptor to validator rule set.",
            "line": " helpers/validator/validator.js:176"
        },
        {
            "message": "Missing item type\nAdd rule alias",
            "line": " helpers/validator/validator.js:197"
        },
        {
            "message": "Missing item type\nAdd extra property to Field. It could be",
            "line": " helpers/validator/validator.js:210"
        },
        {
            "message": "Missing item type\nValidator instance options for fast initialization in method validate.",
            "line": " helpers/validator/validator.js:219"
        },
        {
            "message": "Missing item type\nValidate with fast initialization. Use `options` property for constructor instance;",
            "line": " helpers/validator/validator.js:230"
        },
        {
            "message": "Missing item type\nChecks if ip address is in list (e.g. whitelist, blacklist).",
            "line": " helpers/checkIpInList.js:6"
        },
        {
            "message": "Missing item type\nResend error if API endpoint doesn't exists",
            "line": " helpers/httpApi.js:70"
        },
        {
            "message": "Missing item type\nUse req.sanitize for particular endpoint",
            "line": " helpers/httpApi.js:80"
        },
        {
            "message": "Missing item type\nAttach header to response",
            "line": " helpers/httpApi.js:98"
        },
        {
            "message": "Missing item type\nApply rules of public / internal API described in config.json",
            "line": " helpers/httpApi.js:111"
        },
        {
            "message": "Missing item type\nPass getter for headers and assign then to response",
            "line": " helpers/httpApi.js:132"
        },
        {
            "message": "Missing item type\nAdd 'success' field to every response and attach error message if needed",
            "line": " helpers/httpApi.js:145"
        },
        {
            "message": "Missing item type\nRegister router in express app using default middleware",
            "line": " helpers/httpApi.js:159"
        },
        {
            "message": "Missing item type\nGet time from Lisk epoch.",
            "line": " helpers/slots.js:5"
        },
        {
            "message": "Missing item type\nCreates logger for tracking applied transactions of block",
            "line": " modules/blocks.js:1385"
        },
        {
            "message": "Missing item type\nResets applied transactions",
            "line": " modules/blocks.js:1399"
        },
        {
            "message": "Missing item type\nIncrements applied transactions and logs the progress\n- For the first and last transaction\n- With given frequency",
            "line": " modules/blocks.js:1406"
        },
        {
            "message": "Missing item type\nLogs the progress",
            "line": " modules/blocks.js:1421"
        },
        {
            "message": "Missing item type",
            "line": " test/common/globalBefore.js:5"
        },
        {
            "message": "Missing item type",
            "line": " test/common/globalBefore.js:20"
        },
        {
            "message": "Missing item type\nInitializes Logic class with params",
            "line": " test/common/initModule.js:36"
        },
        {
            "message": "Missing item type\nInitializes Module class with params",
            "line": " test/common/initModule.js:47"
        },
        {
            "message": "Missing item type\nInitializes multiple Modules",
            "line": " test/common/initModule.js:58"
        },
        {
            "message": "Missing item type\nInitializes all created Modules in directory",
            "line": " test/common/initModule.js:94"
        },
        {
            "message": "Missing item type\nInitializes Module class with basic conf",
            "line": " test/common/initModule.js:124"
        },
        {
            "message": "Missing item type\nInitializes Logic class with basic conf",
            "line": " test/common/initModule.js:135"
        },
        {
            "message": "Missing item type\nAccepts Class to invoke (Logic or Module) and fills the scope with basic conf",
            "line": " test/common/initModule.js:146"
        },
        {
            "message": "Missing item type\nStarts and returns db connection",
            "line": " test/common/initModule.js:164"
        }
    ]
}